// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ClassOnlineAction.proto

#ifndef PROTOBUF_ClassOnlineAction_2eproto__INCLUDED
#define PROTOBUF_ClassOnlineAction_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace METRO {
namespace CRO {
namespace MESSAGES {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ClassOnlineAction_2eproto();
void protobuf_AssignDesc_ClassOnlineAction_2eproto();
void protobuf_ShutdownFile_ClassOnlineAction_2eproto();

class ClassOnlineAction;

enum ClassOnlineAction_ActionType {
  ClassOnlineAction_ActionType_OPEN_CLASS = 1,
  ClassOnlineAction_ActionType_CLOSE_CLASS = 2,
  ClassOnlineAction_ActionType_REQUEST_JOINT = 3,
  ClassOnlineAction_ActionType_ACCEPT_JOINT = 4,
  ClassOnlineAction_ActionType_REQUEST_DRAW_BOARD = 5,
  ClassOnlineAction_ActionType_ACCEPT_DRAW_BOARD = 6
};
bool ClassOnlineAction_ActionType_IsValid(int value);
const ClassOnlineAction_ActionType ClassOnlineAction_ActionType_ActionType_MIN = ClassOnlineAction_ActionType_OPEN_CLASS;
const ClassOnlineAction_ActionType ClassOnlineAction_ActionType_ActionType_MAX = ClassOnlineAction_ActionType_ACCEPT_DRAW_BOARD;
const int ClassOnlineAction_ActionType_ActionType_ARRAYSIZE = ClassOnlineAction_ActionType_ActionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClassOnlineAction_ActionType_descriptor();
inline const ::std::string& ClassOnlineAction_ActionType_Name(ClassOnlineAction_ActionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClassOnlineAction_ActionType_descriptor(), value);
}
inline bool ClassOnlineAction_ActionType_Parse(
    const ::std::string& name, ClassOnlineAction_ActionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClassOnlineAction_ActionType>(
    ClassOnlineAction_ActionType_descriptor(), name, value);
}
// ===================================================================

class ClassOnlineAction : public ::google::protobuf::Message {
 public:
  ClassOnlineAction();
  virtual ~ClassOnlineAction();

  ClassOnlineAction(const ClassOnlineAction& from);

  inline ClassOnlineAction& operator=(const ClassOnlineAction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClassOnlineAction& default_instance();

  void Swap(ClassOnlineAction* other);

  // implements Message ----------------------------------------------

  ClassOnlineAction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClassOnlineAction& from);
  void MergeFrom(const ClassOnlineAction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ClassOnlineAction_ActionType ActionType;
  static const ActionType OPEN_CLASS = ClassOnlineAction_ActionType_OPEN_CLASS;
  static const ActionType CLOSE_CLASS = ClassOnlineAction_ActionType_CLOSE_CLASS;
  static const ActionType REQUEST_JOINT = ClassOnlineAction_ActionType_REQUEST_JOINT;
  static const ActionType ACCEPT_JOINT = ClassOnlineAction_ActionType_ACCEPT_JOINT;
  static const ActionType REQUEST_DRAW_BOARD = ClassOnlineAction_ActionType_REQUEST_DRAW_BOARD;
  static const ActionType ACCEPT_DRAW_BOARD = ClassOnlineAction_ActionType_ACCEPT_DRAW_BOARD;
  static inline bool ActionType_IsValid(int value) {
    return ClassOnlineAction_ActionType_IsValid(value);
  }
  static const ActionType ActionType_MIN =
    ClassOnlineAction_ActionType_ActionType_MIN;
  static const ActionType ActionType_MAX =
    ClassOnlineAction_ActionType_ActionType_MAX;
  static const int ActionType_ARRAYSIZE =
    ClassOnlineAction_ActionType_ActionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ActionType_descriptor() {
    return ClassOnlineAction_ActionType_descriptor();
  }
  static inline const ::std::string& ActionType_Name(ActionType value) {
    return ClassOnlineAction_ActionType_Name(value);
  }
  static inline bool ActionType_Parse(const ::std::string& name,
      ActionType* value) {
    return ClassOnlineAction_ActionType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string targetusername = 1;
  inline bool has_targetusername() const;
  inline void clear_targetusername();
  static const int kTargetusernameFieldNumber = 1;
  inline const ::std::string& targetusername() const;
  inline void set_targetusername(const ::std::string& value);
  inline void set_targetusername(const char* value);
  inline void set_targetusername(const char* value, size_t size);
  inline ::std::string* mutable_targetusername();
  inline ::std::string* release_targetusername();
  inline void set_allocated_targetusername(::std::string* targetusername);

  // optional string sourceusername = 4;
  inline bool has_sourceusername() const;
  inline void clear_sourceusername();
  static const int kSourceusernameFieldNumber = 4;
  inline const ::std::string& sourceusername() const;
  inline void set_sourceusername(const ::std::string& value);
  inline void set_sourceusername(const char* value);
  inline void set_sourceusername(const char* value, size_t size);
  inline ::std::string* mutable_sourceusername();
  inline ::std::string* release_sourceusername();
  inline void set_allocated_sourceusername(::std::string* sourceusername);

  // optional string classid = 2;
  inline bool has_classid() const;
  inline void clear_classid();
  static const int kClassidFieldNumber = 2;
  inline const ::std::string& classid() const;
  inline void set_classid(const ::std::string& value);
  inline void set_classid(const char* value);
  inline void set_classid(const char* value, size_t size);
  inline ::std::string* mutable_classid();
  inline ::std::string* release_classid();
  inline void set_allocated_classid(::std::string* classid);

  // optional string actiontype = 3;
  inline bool has_actiontype() const;
  inline void clear_actiontype();
  static const int kActiontypeFieldNumber = 3;
  inline const ::std::string& actiontype() const;
  inline void set_actiontype(const ::std::string& value);
  inline void set_actiontype(const char* value);
  inline void set_actiontype(const char* value, size_t size);
  inline ::std::string* mutable_actiontype();
  inline ::std::string* release_actiontype();
  inline void set_allocated_actiontype(::std::string* actiontype);

  // @@protoc_insertion_point(class_scope:METRO.CRO.MESSAGES.ClassOnlineAction)
 private:
  inline void set_has_targetusername();
  inline void clear_has_targetusername();
  inline void set_has_sourceusername();
  inline void clear_has_sourceusername();
  inline void set_has_classid();
  inline void clear_has_classid();
  inline void set_has_actiontype();
  inline void clear_has_actiontype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* targetusername_;
  ::std::string* sourceusername_;
  ::std::string* classid_;
  ::std::string* actiontype_;
  friend void  protobuf_AddDesc_ClassOnlineAction_2eproto();
  friend void protobuf_AssignDesc_ClassOnlineAction_2eproto();
  friend void protobuf_ShutdownFile_ClassOnlineAction_2eproto();

  void InitAsDefaultInstance();
  static ClassOnlineAction* default_instance_;
};
// ===================================================================


// ===================================================================

// ClassOnlineAction

// optional string targetusername = 1;
inline bool ClassOnlineAction::has_targetusername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClassOnlineAction::set_has_targetusername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClassOnlineAction::clear_has_targetusername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClassOnlineAction::clear_targetusername() {
  if (targetusername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    targetusername_->clear();
  }
  clear_has_targetusername();
}
inline const ::std::string& ClassOnlineAction::targetusername() const {
  // @@protoc_insertion_point(field_get:METRO.CRO.MESSAGES.ClassOnlineAction.targetusername)
  return *targetusername_;
}
inline void ClassOnlineAction::set_targetusername(const ::std::string& value) {
  set_has_targetusername();
  if (targetusername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    targetusername_ = new ::std::string;
  }
  targetusername_->assign(value);
  // @@protoc_insertion_point(field_set:METRO.CRO.MESSAGES.ClassOnlineAction.targetusername)
}
inline void ClassOnlineAction::set_targetusername(const char* value) {
  set_has_targetusername();
  if (targetusername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    targetusername_ = new ::std::string;
  }
  targetusername_->assign(value);
  // @@protoc_insertion_point(field_set_char:METRO.CRO.MESSAGES.ClassOnlineAction.targetusername)
}
inline void ClassOnlineAction::set_targetusername(const char* value, size_t size) {
  set_has_targetusername();
  if (targetusername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    targetusername_ = new ::std::string;
  }
  targetusername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:METRO.CRO.MESSAGES.ClassOnlineAction.targetusername)
}
inline ::std::string* ClassOnlineAction::mutable_targetusername() {
  set_has_targetusername();
  if (targetusername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    targetusername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:METRO.CRO.MESSAGES.ClassOnlineAction.targetusername)
  return targetusername_;
}
inline ::std::string* ClassOnlineAction::release_targetusername() {
  clear_has_targetusername();
  if (targetusername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = targetusername_;
    targetusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClassOnlineAction::set_allocated_targetusername(::std::string* targetusername) {
  if (targetusername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete targetusername_;
  }
  if (targetusername) {
    set_has_targetusername();
    targetusername_ = targetusername;
  } else {
    clear_has_targetusername();
    targetusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:METRO.CRO.MESSAGES.ClassOnlineAction.targetusername)
}

// optional string sourceusername = 4;
inline bool ClassOnlineAction::has_sourceusername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClassOnlineAction::set_has_sourceusername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClassOnlineAction::clear_has_sourceusername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClassOnlineAction::clear_sourceusername() {
  if (sourceusername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sourceusername_->clear();
  }
  clear_has_sourceusername();
}
inline const ::std::string& ClassOnlineAction::sourceusername() const {
  // @@protoc_insertion_point(field_get:METRO.CRO.MESSAGES.ClassOnlineAction.sourceusername)
  return *sourceusername_;
}
inline void ClassOnlineAction::set_sourceusername(const ::std::string& value) {
  set_has_sourceusername();
  if (sourceusername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sourceusername_ = new ::std::string;
  }
  sourceusername_->assign(value);
  // @@protoc_insertion_point(field_set:METRO.CRO.MESSAGES.ClassOnlineAction.sourceusername)
}
inline void ClassOnlineAction::set_sourceusername(const char* value) {
  set_has_sourceusername();
  if (sourceusername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sourceusername_ = new ::std::string;
  }
  sourceusername_->assign(value);
  // @@protoc_insertion_point(field_set_char:METRO.CRO.MESSAGES.ClassOnlineAction.sourceusername)
}
inline void ClassOnlineAction::set_sourceusername(const char* value, size_t size) {
  set_has_sourceusername();
  if (sourceusername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sourceusername_ = new ::std::string;
  }
  sourceusername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:METRO.CRO.MESSAGES.ClassOnlineAction.sourceusername)
}
inline ::std::string* ClassOnlineAction::mutable_sourceusername() {
  set_has_sourceusername();
  if (sourceusername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sourceusername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:METRO.CRO.MESSAGES.ClassOnlineAction.sourceusername)
  return sourceusername_;
}
inline ::std::string* ClassOnlineAction::release_sourceusername() {
  clear_has_sourceusername();
  if (sourceusername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sourceusername_;
    sourceusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClassOnlineAction::set_allocated_sourceusername(::std::string* sourceusername) {
  if (sourceusername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sourceusername_;
  }
  if (sourceusername) {
    set_has_sourceusername();
    sourceusername_ = sourceusername;
  } else {
    clear_has_sourceusername();
    sourceusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:METRO.CRO.MESSAGES.ClassOnlineAction.sourceusername)
}

// optional string classid = 2;
inline bool ClassOnlineAction::has_classid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClassOnlineAction::set_has_classid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClassOnlineAction::clear_has_classid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClassOnlineAction::clear_classid() {
  if (classid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    classid_->clear();
  }
  clear_has_classid();
}
inline const ::std::string& ClassOnlineAction::classid() const {
  // @@protoc_insertion_point(field_get:METRO.CRO.MESSAGES.ClassOnlineAction.classid)
  return *classid_;
}
inline void ClassOnlineAction::set_classid(const ::std::string& value) {
  set_has_classid();
  if (classid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    classid_ = new ::std::string;
  }
  classid_->assign(value);
  // @@protoc_insertion_point(field_set:METRO.CRO.MESSAGES.ClassOnlineAction.classid)
}
inline void ClassOnlineAction::set_classid(const char* value) {
  set_has_classid();
  if (classid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    classid_ = new ::std::string;
  }
  classid_->assign(value);
  // @@protoc_insertion_point(field_set_char:METRO.CRO.MESSAGES.ClassOnlineAction.classid)
}
inline void ClassOnlineAction::set_classid(const char* value, size_t size) {
  set_has_classid();
  if (classid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    classid_ = new ::std::string;
  }
  classid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:METRO.CRO.MESSAGES.ClassOnlineAction.classid)
}
inline ::std::string* ClassOnlineAction::mutable_classid() {
  set_has_classid();
  if (classid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    classid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:METRO.CRO.MESSAGES.ClassOnlineAction.classid)
  return classid_;
}
inline ::std::string* ClassOnlineAction::release_classid() {
  clear_has_classid();
  if (classid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = classid_;
    classid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClassOnlineAction::set_allocated_classid(::std::string* classid) {
  if (classid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete classid_;
  }
  if (classid) {
    set_has_classid();
    classid_ = classid;
  } else {
    clear_has_classid();
    classid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:METRO.CRO.MESSAGES.ClassOnlineAction.classid)
}

// optional string actiontype = 3;
inline bool ClassOnlineAction::has_actiontype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClassOnlineAction::set_has_actiontype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClassOnlineAction::clear_has_actiontype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClassOnlineAction::clear_actiontype() {
  if (actiontype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    actiontype_->clear();
  }
  clear_has_actiontype();
}
inline const ::std::string& ClassOnlineAction::actiontype() const {
  // @@protoc_insertion_point(field_get:METRO.CRO.MESSAGES.ClassOnlineAction.actiontype)
  return *actiontype_;
}
inline void ClassOnlineAction::set_actiontype(const ::std::string& value) {
  set_has_actiontype();
  if (actiontype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    actiontype_ = new ::std::string;
  }
  actiontype_->assign(value);
  // @@protoc_insertion_point(field_set:METRO.CRO.MESSAGES.ClassOnlineAction.actiontype)
}
inline void ClassOnlineAction::set_actiontype(const char* value) {
  set_has_actiontype();
  if (actiontype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    actiontype_ = new ::std::string;
  }
  actiontype_->assign(value);
  // @@protoc_insertion_point(field_set_char:METRO.CRO.MESSAGES.ClassOnlineAction.actiontype)
}
inline void ClassOnlineAction::set_actiontype(const char* value, size_t size) {
  set_has_actiontype();
  if (actiontype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    actiontype_ = new ::std::string;
  }
  actiontype_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:METRO.CRO.MESSAGES.ClassOnlineAction.actiontype)
}
inline ::std::string* ClassOnlineAction::mutable_actiontype() {
  set_has_actiontype();
  if (actiontype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    actiontype_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:METRO.CRO.MESSAGES.ClassOnlineAction.actiontype)
  return actiontype_;
}
inline ::std::string* ClassOnlineAction::release_actiontype() {
  clear_has_actiontype();
  if (actiontype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = actiontype_;
    actiontype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClassOnlineAction::set_allocated_actiontype(::std::string* actiontype) {
  if (actiontype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete actiontype_;
  }
  if (actiontype) {
    set_has_actiontype();
    actiontype_ = actiontype;
  } else {
    clear_has_actiontype();
    actiontype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:METRO.CRO.MESSAGES.ClassOnlineAction.actiontype)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MESSAGES
}  // namespace CRO
}  // namespace METRO

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::METRO::CRO::MESSAGES::ClassOnlineAction_ActionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::METRO::CRO::MESSAGES::ClassOnlineAction_ActionType>() {
  return ::METRO::CRO::MESSAGES::ClassOnlineAction_ActionType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ClassOnlineAction_2eproto__INCLUDED
