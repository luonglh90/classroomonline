// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ClassroomInfo.pb.h"
// @@protoc_insertion_point(imports)

@implementation ClassroomInfoRoot
static id<PBExtensionField> ClassroomInfo_message = nil;
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ClassroomInfoRoot class]) {
    ClassroomInfo_message =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[IpcMessage class]
                                       fieldNumber:202
                                      defaultValue:[ClassroomInfo defaultInstance]
                               messageOrGroupClass:[ClassroomInfo class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [IpcMessageRoot registerAllExtensions:registry];
    [TeacherRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
  [registry addExtension:ClassroomInfo_message];
}
@end

@interface ClassroomInfo ()
@property SInt32 uId;
@property SInt32 cateId;
@property (strong) NSString* name;
@property (strong) Teacher* teacher;
@property (strong) NSString* pb_description;
@property (strong) NSString* imgurl;
@end

@implementation ClassroomInfo

- (BOOL) hasUId {
  return !!hasUId_;
}
- (void) setHasUId:(BOOL) _value_ {
  hasUId_ = !!_value_;
}
@synthesize uId;
- (BOOL) hasCateId {
  return !!hasCateId_;
}
- (void) setHasCateId:(BOOL) _value_ {
  hasCateId_ = !!_value_;
}
@synthesize cateId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasTeacher {
  return !!hasTeacher_;
}
- (void) setHasTeacher:(BOOL) _value_ {
  hasTeacher_ = !!_value_;
}
@synthesize teacher;
- (BOOL) hasDescription {
  return !!hasDescription_;
}
- (void) setHasDescription:(BOOL) _value_ {
  hasDescription_ = !!_value_;
}
@synthesize pb_description;
- (BOOL) hasImgurl {
  return !!hasImgurl_;
}
- (void) setHasImgurl:(BOOL) _value_ {
  hasImgurl_ = !!_value_;
}
@synthesize imgurl;
- (instancetype) init {
  if ((self = [super init])) {
    self.uId = 0;
    self.cateId = 0;
    self.name = @"";
    self.teacher = [Teacher defaultInstance];
    self.pb_description = @"";
    self.imgurl = @"";
  }
  return self;
}
+ (id<PBExtensionField>) message {
  return ClassroomInfo_message;
}
static ClassroomInfo* defaultClassroomInfoInstance = nil;
+ (void) initialize {
  if (self == [ClassroomInfo class]) {
    defaultClassroomInfoInstance = [[ClassroomInfo alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultClassroomInfoInstance;
}
- (instancetype) defaultInstance {
  return defaultClassroomInfoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUId) {
    return NO;
  }
  if (!self.hasCateId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasTeacher) {
    return NO;
  }
  if (!self.teacher.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUId) {
    [output writeInt32:1 value:self.uId];
  }
  if (self.hasCateId) {
    [output writeInt32:2 value:self.cateId];
  }
  if (self.hasName) {
    [output writeString:3 value:self.name];
  }
  if (self.hasTeacher) {
    [output writeMessage:4 value:self.teacher];
  }
  if (self.hasDescription) {
    [output writeString:5 value:self.pb_description];
  }
  if (self.hasImgurl) {
    [output writeString:6 value:self.imgurl];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUId) {
    size_ += computeInt32Size(1, self.uId);
  }
  if (self.hasCateId) {
    size_ += computeInt32Size(2, self.cateId);
  }
  if (self.hasName) {
    size_ += computeStringSize(3, self.name);
  }
  if (self.hasTeacher) {
    size_ += computeMessageSize(4, self.teacher);
  }
  if (self.hasDescription) {
    size_ += computeStringSize(5, self.pb_description);
  }
  if (self.hasImgurl) {
    size_ += computeStringSize(6, self.imgurl);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ClassroomInfo*) parseFromData:(NSData*) data {
  return (ClassroomInfo*)[[[ClassroomInfo builder] mergeFromData:data] build];
}
+ (ClassroomInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClassroomInfo*)[[[ClassroomInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ClassroomInfo*) parseFromInputStream:(NSInputStream*) input {
  return (ClassroomInfo*)[[[ClassroomInfo builder] mergeFromInputStream:input] build];
}
+ (ClassroomInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClassroomInfo*)[[[ClassroomInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClassroomInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ClassroomInfo*)[[[ClassroomInfo builder] mergeFromCodedInputStream:input] build];
}
+ (ClassroomInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClassroomInfo*)[[[ClassroomInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClassroomInfoBuilder*) builder {
  return [[ClassroomInfoBuilder alloc] init];
}
+ (ClassroomInfoBuilder*) builderWithPrototype:(ClassroomInfo*) prototype {
  return [[ClassroomInfo builder] mergeFrom:prototype];
}
- (ClassroomInfoBuilder*) builder {
  return [ClassroomInfo builder];
}
- (ClassroomInfoBuilder*) toBuilder {
  return [ClassroomInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uId", [NSNumber numberWithInteger:self.uId]];
  }
  if (self.hasCateId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cateId", [NSNumber numberWithInteger:self.cateId]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasTeacher) {
    [output appendFormat:@"%@%@ {\n", indent, @"teacher"];
    [self.teacher writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasDescription) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pb_description", self.pb_description];
  }
  if (self.hasImgurl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"imgurl", self.imgurl];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.uId] forKey: @"uId"];
  }
  if (self.hasCateId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.cateId] forKey: @"cateId"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasTeacher) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.teacher storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"teacher"];
  }
  if (self.hasDescription) {
    [dictionary setObject: self.pb_description forKey: @"pb_description"];
  }
  if (self.hasImgurl) {
    [dictionary setObject: self.imgurl forKey: @"imgurl"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ClassroomInfo class]]) {
    return NO;
  }
  ClassroomInfo *otherMessage = other;
  return
      self.hasUId == otherMessage.hasUId &&
      (!self.hasUId || self.uId == otherMessage.uId) &&
      self.hasCateId == otherMessage.hasCateId &&
      (!self.hasCateId || self.cateId == otherMessage.cateId) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasTeacher == otherMessage.hasTeacher &&
      (!self.hasTeacher || [self.teacher isEqual:otherMessage.teacher]) &&
      self.hasDescription == otherMessage.hasDescription &&
      (!self.hasDescription || [self.pb_description isEqual:otherMessage.pb_description]) &&
      self.hasImgurl == otherMessage.hasImgurl &&
      (!self.hasImgurl || [self.imgurl isEqual:otherMessage.imgurl]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.uId] hash];
  }
  if (self.hasCateId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cateId] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasTeacher) {
    hashCode = hashCode * 31 + [self.teacher hash];
  }
  if (self.hasDescription) {
    hashCode = hashCode * 31 + [self.pb_description hash];
  }
  if (self.hasImgurl) {
    hashCode = hashCode * 31 + [self.imgurl hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ClassroomInfoBuilder()
@property (strong) ClassroomInfo* resultClassroomInfo;
@end

@implementation ClassroomInfoBuilder
@synthesize resultClassroomInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultClassroomInfo = [[ClassroomInfo alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultClassroomInfo;
}
- (ClassroomInfoBuilder*) clear {
  self.resultClassroomInfo = [[ClassroomInfo alloc] init];
  return self;
}
- (ClassroomInfoBuilder*) clone {
  return [ClassroomInfo builderWithPrototype:resultClassroomInfo];
}
- (ClassroomInfo*) defaultInstance {
  return [ClassroomInfo defaultInstance];
}
- (ClassroomInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ClassroomInfo*) buildPartial {
  ClassroomInfo* returnMe = resultClassroomInfo;
  self.resultClassroomInfo = nil;
  return returnMe;
}
- (ClassroomInfoBuilder*) mergeFrom:(ClassroomInfo*) other {
  if (other == [ClassroomInfo defaultInstance]) {
    return self;
  }
  if (other.hasUId) {
    [self setUId:other.uId];
  }
  if (other.hasCateId) {
    [self setCateId:other.cateId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasTeacher) {
    [self mergeTeacher:other.teacher];
  }
  if (other.hasDescription) {
    [self setDescription:other.pb_description];
  }
  if (other.hasImgurl) {
    [self setImgurl:other.imgurl];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ClassroomInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ClassroomInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUId:[input readInt32]];
        break;
      }
      case 16: {
        [self setCateId:[input readInt32]];
        break;
      }
      case 26: {
        [self setName:[input readString]];
        break;
      }
      case 34: {
        TeacherBuilder* subBuilder = [Teacher builder];
        if (self.hasTeacher) {
          [subBuilder mergeFrom:self.teacher];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTeacher:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        [self setDescription:[input readString]];
        break;
      }
      case 50: {
        [self setImgurl:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUId {
  return resultClassroomInfo.hasUId;
}
- (SInt32) uId {
  return resultClassroomInfo.uId;
}
- (ClassroomInfoBuilder*) setUId:(SInt32) value {
  resultClassroomInfo.hasUId = YES;
  resultClassroomInfo.uId = value;
  return self;
}
- (ClassroomInfoBuilder*) clearUId {
  resultClassroomInfo.hasUId = NO;
  resultClassroomInfo.uId = 0;
  return self;
}
- (BOOL) hasCateId {
  return resultClassroomInfo.hasCateId;
}
- (SInt32) cateId {
  return resultClassroomInfo.cateId;
}
- (ClassroomInfoBuilder*) setCateId:(SInt32) value {
  resultClassroomInfo.hasCateId = YES;
  resultClassroomInfo.cateId = value;
  return self;
}
- (ClassroomInfoBuilder*) clearCateId {
  resultClassroomInfo.hasCateId = NO;
  resultClassroomInfo.cateId = 0;
  return self;
}
- (BOOL) hasName {
  return resultClassroomInfo.hasName;
}
- (NSString*) name {
  return resultClassroomInfo.name;
}
- (ClassroomInfoBuilder*) setName:(NSString*) value {
  resultClassroomInfo.hasName = YES;
  resultClassroomInfo.name = value;
  return self;
}
- (ClassroomInfoBuilder*) clearName {
  resultClassroomInfo.hasName = NO;
  resultClassroomInfo.name = @"";
  return self;
}
- (BOOL) hasTeacher {
  return resultClassroomInfo.hasTeacher;
}
- (Teacher*) teacher {
  return resultClassroomInfo.teacher;
}
- (ClassroomInfoBuilder*) setTeacher:(Teacher*) value {
  resultClassroomInfo.hasTeacher = YES;
  resultClassroomInfo.teacher = value;
  return self;
}
- (ClassroomInfoBuilder*) setTeacherBuilder:(TeacherBuilder*) builderForValue {
  return [self setTeacher:[builderForValue build]];
}
- (ClassroomInfoBuilder*) mergeTeacher:(Teacher*) value {
  if (resultClassroomInfo.hasTeacher &&
      resultClassroomInfo.teacher != [Teacher defaultInstance]) {
    resultClassroomInfo.teacher =
      [[[Teacher builderWithPrototype:resultClassroomInfo.teacher] mergeFrom:value] buildPartial];
  } else {
    resultClassroomInfo.teacher = value;
  }
  resultClassroomInfo.hasTeacher = YES;
  return self;
}
- (ClassroomInfoBuilder*) clearTeacher {
  resultClassroomInfo.hasTeacher = NO;
  resultClassroomInfo.teacher = [Teacher defaultInstance];
  return self;
}
- (BOOL) hasDescription {
  return resultClassroomInfo.hasDescription;
}
- (NSString*) pb_description {
  return resultClassroomInfo.pb_description;
}
- (ClassroomInfoBuilder*) setDescription:(NSString*) value {
  resultClassroomInfo.hasDescription = YES;
  resultClassroomInfo.pb_description = value;
  return self;
}
- (ClassroomInfoBuilder*) clearDescription {
  resultClassroomInfo.hasDescription = NO;
  resultClassroomInfo.pb_description = @"";
  return self;
}
- (BOOL) hasImgurl {
  return resultClassroomInfo.hasImgurl;
}
- (NSString*) imgurl {
  return resultClassroomInfo.imgurl;
}
- (ClassroomInfoBuilder*) setImgurl:(NSString*) value {
  resultClassroomInfo.hasImgurl = YES;
  resultClassroomInfo.imgurl = value;
  return self;
}
- (ClassroomInfoBuilder*) clearImgurl {
  resultClassroomInfo.hasImgurl = NO;
  resultClassroomInfo.imgurl = @"";
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
