// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "MetroPointXY.pb.h"
// @@protoc_insertion_point(imports)

@implementation MetroPointXyRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [MetroPointXyRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface MetroPointXY ()
@property SInt32 x;
@property SInt32 y;
@end

@implementation MetroPointXY

- (BOOL) hasX {
  return !!hasX_;
}
- (void) setHasX:(BOOL) _value_ {
  hasX_ = !!_value_;
}
@synthesize x;
- (BOOL) hasY {
  return !!hasY_;
}
- (void) setHasY:(BOOL) _value_ {
  hasY_ = !!_value_;
}
@synthesize y;
- (instancetype) init {
  if ((self = [super init])) {
    self.x = 0;
    self.y = 0;
  }
  return self;
}
static MetroPointXY* defaultMetroPointXYInstance = nil;
+ (void) initialize {
  if (self == [MetroPointXY class]) {
    defaultMetroPointXYInstance = [[MetroPointXY alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultMetroPointXYInstance;
}
- (instancetype) defaultInstance {
  return defaultMetroPointXYInstance;
}
- (BOOL) isInitialized {
  if (!self.hasX) {
    return NO;
  }
  if (!self.hasY) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasX) {
    [output writeInt32:1 value:self.x];
  }
  if (self.hasY) {
    [output writeInt32:2 value:self.y];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasX) {
    size_ += computeInt32Size(1, self.x);
  }
  if (self.hasY) {
    size_ += computeInt32Size(2, self.y);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (MetroPointXY*) parseFromData:(NSData*) data {
  return (MetroPointXY*)[[[MetroPointXY builder] mergeFromData:data] build];
}
+ (MetroPointXY*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MetroPointXY*)[[[MetroPointXY builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MetroPointXY*) parseFromInputStream:(NSInputStream*) input {
  return (MetroPointXY*)[[[MetroPointXY builder] mergeFromInputStream:input] build];
}
+ (MetroPointXY*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MetroPointXY*)[[[MetroPointXY builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MetroPointXY*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MetroPointXY*)[[[MetroPointXY builder] mergeFromCodedInputStream:input] build];
}
+ (MetroPointXY*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MetroPointXY*)[[[MetroPointXY builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MetroPointXYBuilder*) builder {
  return [[MetroPointXYBuilder alloc] init];
}
+ (MetroPointXYBuilder*) builderWithPrototype:(MetroPointXY*) prototype {
  return [[MetroPointXY builder] mergeFrom:prototype];
}
- (MetroPointXYBuilder*) builder {
  return [MetroPointXY builder];
}
- (MetroPointXYBuilder*) toBuilder {
  return [MetroPointXY builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasX) {
    [output appendFormat:@"%@%@: %@\n", indent, @"x", [NSNumber numberWithInteger:self.x]];
  }
  if (self.hasY) {
    [output appendFormat:@"%@%@: %@\n", indent, @"y", [NSNumber numberWithInteger:self.y]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasX) {
    [dictionary setObject: [NSNumber numberWithInteger:self.x] forKey: @"x"];
  }
  if (self.hasY) {
    [dictionary setObject: [NSNumber numberWithInteger:self.y] forKey: @"y"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[MetroPointXY class]]) {
    return NO;
  }
  MetroPointXY *otherMessage = other;
  return
      self.hasX == otherMessage.hasX &&
      (!self.hasX || self.x == otherMessage.x) &&
      self.hasY == otherMessage.hasY &&
      (!self.hasY || self.y == otherMessage.y) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasX) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.x] hash];
  }
  if (self.hasY) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.y] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface MetroPointXYBuilder()
@property (strong) MetroPointXY* resultMetroPointXy;
@end

@implementation MetroPointXYBuilder
@synthesize resultMetroPointXy;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultMetroPointXy = [[MetroPointXY alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultMetroPointXy;
}
- (MetroPointXYBuilder*) clear {
  self.resultMetroPointXy = [[MetroPointXY alloc] init];
  return self;
}
- (MetroPointXYBuilder*) clone {
  return [MetroPointXY builderWithPrototype:resultMetroPointXy];
}
- (MetroPointXY*) defaultInstance {
  return [MetroPointXY defaultInstance];
}
- (MetroPointXY*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MetroPointXY*) buildPartial {
  MetroPointXY* returnMe = resultMetroPointXy;
  self.resultMetroPointXy = nil;
  return returnMe;
}
- (MetroPointXYBuilder*) mergeFrom:(MetroPointXY*) other {
  if (other == [MetroPointXY defaultInstance]) {
    return self;
  }
  if (other.hasX) {
    [self setX:other.x];
  }
  if (other.hasY) {
    [self setY:other.y];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MetroPointXYBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MetroPointXYBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setX:[input readInt32]];
        break;
      }
      case 16: {
        [self setY:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasX {
  return resultMetroPointXy.hasX;
}
- (SInt32) x {
  return resultMetroPointXy.x;
}
- (MetroPointXYBuilder*) setX:(SInt32) value {
  resultMetroPointXy.hasX = YES;
  resultMetroPointXy.x = value;
  return self;
}
- (MetroPointXYBuilder*) clearX {
  resultMetroPointXy.hasX = NO;
  resultMetroPointXy.x = 0;
  return self;
}
- (BOOL) hasY {
  return resultMetroPointXy.hasY;
}
- (SInt32) y {
  return resultMetroPointXy.y;
}
- (MetroPointXYBuilder*) setY:(SInt32) value {
  resultMetroPointXy.hasY = YES;
  resultMetroPointXy.y = value;
  return self;
}
- (MetroPointXYBuilder*) clearY {
  resultMetroPointXy.hasY = NO;
  resultMetroPointXy.y = 0;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
